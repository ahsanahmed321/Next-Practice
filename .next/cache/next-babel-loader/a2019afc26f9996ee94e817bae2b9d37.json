{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\Next Projects\\\\first-project\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from \"../components/layout\";\nimport { useState } from \"react\"; //import fetch from \"isomorphic-unfetch\";\n\nimport axios from \"axios\";\n\nvar index = function index(props) {\n  var _useState = useState(\"\"),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var onChangeHandler = function onChangeHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n    console.log(state);\n  };\n\n  var addTaskHandler = function addTaskHandler(e) {\n    // fetch(\"http://localhost:5000/tasks\", state)\n    //   .then(res => console.log(res.data))\n    //   .catch(err => console.log(err));\n    axios.post(\"http://localhost:5000/tasks\", state).then(function (res) {\n      return console.log(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  console.log(props.allTasks);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Welcome to Home Page\"), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Description\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    onChange: function onChange(e) {\n      return onChangeHandler(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: addTaskHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add Task\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, allTasks;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/tasks\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          allTasks = _context.sent;\n          return _context.abrupt(\"return\", allTasks);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nindex.getInitialProps = function _callee2() {\n  var allTasks;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/tasks\"));\n\n        case 2:\n          allTasks = _context2.sent;\n          return _context2.abrupt(\"return\", allTasks);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default index;","map":{"version":3,"sources":["E:/Next Projects/first-project/pages/index.js"],"names":["Layout","useState","axios","index","props","state","setState","onChangeHandler","e","target","name","value","console","log","addTaskHandler","post","then","res","data","err","allTasks","Index","getInitialProps","fetch","json","get"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACKH,QAAQ,CAAC,EAAD,CADb;AAAA,MACdI,KADc;AAAA,MACPC,QADO;;AAGrB,MAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AACzBF,IAAAA,QAAQ,mBAAMD,KAAN,sBAAcG,CAAC,CAACC,MAAF,CAASC,IAAvB,EAA8BF,CAAC,CAACC,MAAF,CAASE,KAAvC,GAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GAHD;;AAKA,MAAIS,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,CAAC,EAAI;AACxB;AACA;AACA;AACAN,IAAAA,KAAK,CACFa,IADH,CACQ,6BADR,EACuCV,KADvC,EAEGW,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,IAAhB,CAAJ;AAAA,KAFX,WAGS,UAAAC,GAAG;AAAA,aAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ;AAAA,KAHZ;AAID,GARD;;AAUAP,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACgB,QAAlB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAE,kBAAAZ,CAAC;AAAA,aAAID,eAAe,CAACC,CAAD,CAAnB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EAUE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,aAAID,eAAe,CAACC,CAAD,CAAnB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAeE;AAAQ,IAAA,OAAO,EAAEM,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CADF;AAmBD,CAvCD;;AAyCAO,KAAK,CAACC,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJC,KAAK,CAAC,6BAAD,CADD;;AAAA;AAChBN,UAAAA,GADgB;AAAA;AAAA,2CAECA,GAAG,CAACO,IAAJ,EAFD;;AAAA;AAEhBJ,UAAAA,QAFgB;AAAA,2CAIfA,QAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMAjB,KAAK,CAACmB,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCpB,KAAK,CAACuB,GAAN,CAAU,6BAAV,CADD;;AAAA;AAChBL,UAAAA,QADgB;AAAA,4CAEfA,QAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,eAAejB,KAAf","sourcesContent":["import Layout from \"../components/layout\";\r\nimport { useState } from \"react\";\r\n//import fetch from \"isomorphic-unfetch\";\r\nimport axios from \"axios\";\r\n\r\nconst index = props => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  var onChangeHandler = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n    console.log(state);\r\n  };\r\n\r\n  var addTaskHandler = e => {\r\n    // fetch(\"http://localhost:5000/tasks\", state)\r\n    //   .then(res => console.log(res.data))\r\n    //   .catch(err => console.log(err));\r\n    axios\r\n      .post(\"http://localhost:5000/tasks\", state)\r\n      .then(res => console.log(res.data))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  console.log(props.allTasks);\r\n\r\n  return (\r\n    <div>\r\n      <Layout>Welcome to Home Page</Layout>\r\n\r\n      <label>Title</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        onChange={e => onChangeHandler(e)}\r\n      ></input>\r\n      <label>Description</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"description\"\r\n        onChange={e => onChangeHandler(e)}\r\n      ></input>\r\n      <button onClick={addTaskHandler}>Add Task</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async function() {\r\n  const res = await fetch(\"http://localhost:5000/tasks\");\r\n  const allTasks = await res.json();\r\n\r\n  return allTasks;\r\n};\r\nindex.getInitialProps = async function() {\r\n  const allTasks = await axios.get(\"http://localhost:5000/tasks\");\r\n  return allTasks;\r\n};\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}