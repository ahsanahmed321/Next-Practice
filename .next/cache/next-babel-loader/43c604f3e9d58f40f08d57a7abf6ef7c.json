{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\Next Projects\\\\first-project\\\\pages\\\\edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from \"../components/layout\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nvar edit = function edit(props) {\n  var _useState = useState(\"\"),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      status = _useState2[0],\n      setStatuts = _useState2[1];\n\n  var onUpdateHandler = function onUpdateHandler(e) {\n    axios.patch(\"http://localhost:5000/tasks/\" + e.target.id + \"/status\", st).then(function (res) {\n      return console.log(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  var onDeleteHandler = function onDeleteHandler(e) {\n    axios[\"delete\"](\"http://localhost:5000/tasks/\" + e.target.id);\n  };\n\n  var onChangeAddHandler = function onChangeAddHandler(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n    console.log(state);\n  };\n\n  var onChangeUpdateHandler = function onChangeUpdateHandler(e) {\n    setStatuts(_objectSpread({}, status, _defineProperty({}, e.target.name, e.target.value)));\n    console.log(status);\n  };\n\n  var addTaskHandler = function addTaskHandler(e) {\n    // fetch(\"http://localhost:5000/tasks\", state)\n    //   .then(res => console.log(res.data))\n    //   .catch(err => console.log(err));\n    axios.post(\"http://localhost:5000/tasks\", state).then(function (res) {\n      return console.log(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  console.log(props.allTasks);\n  var allTasks = props.allTasks.map(function (task) {\n    return __jsx(\"div\", {\n      key: task._id,\n      className: \"card\",\n      style: {\n        margin: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Title : \", task.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Description : \", task.description), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Status : \", task.status, \" \"), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Description\"), __jsx(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      onChange: function onChange(e) {\n        return onChangeUpdateHandler(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      id: task._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Update\"), __jsx(\"button\", {\n      id: task._id,\n      onClick: function onClick(e) {\n        return onDeleteHandler(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Delete\"));\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Welcome to edit Page\", allTasks, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: function onChange(e) {\n      return onChangeAddHandler(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Description\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    onChange: function onChange(e) {\n      return onChangeAddHandler(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: addTaskHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Add Task\"));\n};\n\nedit.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/tasks\"));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            allTasks: res.data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default edit;","map":{"version":3,"sources":["E:/Next Projects/first-project/pages/edit.js"],"names":["Layout","axios","useState","edit","props","state","setState","status","setStatuts","onUpdateHandler","e","patch","target","id","st","then","res","console","log","data","err","onDeleteHandler","onChangeAddHandler","name","value","onChangeUpdateHandler","addTaskHandler","post","allTasks","map","task","_id","margin","title","description","getInitialProps","get"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst edit = props => {\r\n  const [state, setState] = useState(\"\");\r\n  const [status, setStatuts] = useState(\"\");\r\n\r\n  var onUpdateHandler = e => {\r\n    axios\r\n      .patch(\"http://localhost:5000/tasks/\" + e.target.id + \"/status\", st)\r\n      .then(res => console.log(res.data))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  var onDeleteHandler = e => {\r\n    axios.delete(\"http://localhost:5000/tasks/\" + e.target.id);\r\n  };\r\n\r\n  var onChangeAddHandler = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n    console.log(state);\r\n  };\r\n  var onChangeUpdateHandler = e => {\r\n    setStatuts({ ...status, [e.target.name]: e.target.value });\r\n    console.log(status);\r\n  };\r\n\r\n  var addTaskHandler = e => {\r\n    // fetch(\"http://localhost:5000/tasks\", state)\r\n    //   .then(res => console.log(res.data))\r\n    //   .catch(err => console.log(err));\r\n    axios\r\n      .post(\"http://localhost:5000/tasks\", state)\r\n      .then(res => console.log(res.data))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  console.log(props.allTasks);\r\n\r\n  var allTasks = props.allTasks.map(task => {\r\n    return (\r\n      <div key={task._id} className=\"card\" style={{ margin: \"16px\" }}>\r\n        <p>Title : {task.title}</p>\r\n        <p>Description : {task.description}</p>\r\n        <p>Status : {task.status} </p>\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          onChange={e => onChangeUpdateHandler(e)}\r\n        ></input>\r\n        <button id={task._id}>Update</button>\r\n        <button id={task._id} onClick={e => onDeleteHandler(e)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      Welcome to edit Page\r\n      {allTasks}\r\n      <label>Title</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        onChange={e => onChangeAddHandler(e)}\r\n      ></input>\r\n      <label>Description</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"description\"\r\n        onChange={e => onChangeAddHandler(e)}\r\n      ></input>\r\n      <button onClick={addTaskHandler}>Add Task</button>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nedit.getInitialProps = async function() {\r\n  const res = await axios.get(\"http://localhost:5000/tasks\");\r\n\r\n  return {\r\n    allTasks: res.data\r\n  };\r\n};\r\n\r\nexport default edit;\r\n"]},"metadata":{},"sourceType":"module"}