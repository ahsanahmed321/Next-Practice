{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./actionTypes\";\nimport setAuthToken from \"../../utils/set-auth-token\"; //import jwt_decode from \"jwt-decode\";\n//  Register Users\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => history.push(\"/Auth/login\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Login User and Get Token\n\nexport const loginUser = userData => dispatch => {\n  console.log(\"Hi\");\n  axios.post(\"http://localhost:5000/auth/signin\", userData).then(res => {\n    console.log(\"bye\"); // get token\n\n    console.log(res.data);\n    const token = res.data; // save token to loacal storage\n\n    localStorage.setItem(\"token\", token); // set token to Auth Header\n\n    setAuthToken(token); //decode token to get user data\n    // const decoded = jwt_decode(token);\n    // set current user\n    // dispatch(setCurrentUSer(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // set logged in user\n\nexport const setCurrentUSer = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; //logout current user\n\nexport const logoutCurrentUser = () => dispatch => {\n  //remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); //Remove auth Header\n\n  setAuthToken(false); // set current user to {}\n\n  dispatch(setCurrentUSer({}));\n};","map":{"version":3,"sources":["E:/Next Projects/first-project/Store/actions/authActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setAuthToken","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","console","log","token","localStorage","setItem","setCurrentUSer","decoded","logoutCurrentUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,eAA7C;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;AAEA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC7DP,EAAAA,KAAK,CACFQ,IADH,CACQ,qBADR,EAC+BH,QAD/B,EAEGI,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,aAAb,CAFf,EAGGC,KAHH,CAGSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AASD,CAVM,C,CAYP;;AAEA,OAAO,MAAMC,SAAS,GAAGb,QAAQ,IAAIE,QAAQ,IAAI;AAC/CY,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEApB,EAAAA,KAAK,CACFQ,IADH,CACQ,mCADR,EAC6CH,QAD7C,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADW,CAEX;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACO,IAAhB;AACA,UAAMI,KAAK,GAAGX,GAAG,CAACO,IAAlB,CAJW,CAKX;;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B,EANW,CAOX;;AACAlB,IAAAA,YAAY,CAACkB,KAAD,CAAZ,CARW,CASX;AACA;AACA;AACA;AACD,GAfH,EAgBGT,KAhBH,CAgBSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAjBZ;AAsBD,CAzBM,C,CA2BP;;AACA,OAAO,MAAMO,cAAc,GAAGC,OAAO,IAAI;AACvC,SAAO;AACLX,IAAAA,IAAI,EAAEZ,gBADD;AAELa,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAMnB,QAAQ,IAAI;AACjD;AACAe,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB,EAFiD,CAGjD;;AACAxB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJiD,CAKjD;;AACAI,EAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAPM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./actionTypes\";\r\nimport setAuthToken from \"../../utils/set-auth-token\";\r\n//import jwt_decode from \"jwt-decode\";\r\n\r\n//  Register Users\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/Auth/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login User and Get Token\r\n\r\nexport const loginUser = userData => dispatch => {\r\n  console.log(\"Hi\");\r\n\r\n  axios\r\n    .post(\"http://localhost:5000/auth/signin\", userData)\r\n    .then(res => {\r\n      console.log(\"bye\");\r\n      // get token\r\n      console.log(res.data);\r\n      const token = res.data;\r\n      // save token to loacal storage\r\n      localStorage.setItem(\"token\", token);\r\n      // set token to Auth Header\r\n      setAuthToken(token);\r\n      //decode token to get user data\r\n      // const decoded = jwt_decode(token);\r\n      // set current user\r\n      // dispatch(setCurrentUSer(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// set logged in user\r\nexport const setCurrentUSer = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n//logout current user\r\nexport const logoutCurrentUser = () => dispatch => {\r\n  //remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  //Remove auth Header\r\n  setAuthToken(false);\r\n  // set current user to {}\r\n  dispatch(setCurrentUSer({}));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}